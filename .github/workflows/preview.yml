name: Pr√©visualisation GitHub Pages

on:
  pull_request:
    branches: [ main ]

permissions:
  contents: write
  pull-requests: write

jobs:
  deploy-preview:
    runs-on: ubuntu-latest
    if: github.event.pull_request.head.repo.fork == false
    steps:
      - name: R√©cup√©ration du code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: D√©ploiement de la preview
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: ./
          destination_dir: pr-preview/${{ github.event.pull_request.number }}
          keep_files: true

      - name: Publier le lien de preview
        uses: actions/github-script@v7
        with:
          script: |
            const marker = '<!-- preview-comment -->';
            const prNumber = context.payload.pull_request.number;
            const { owner, repo } = context.repo;
            const previewUrl = `https://${owner}.github.io/${repo}/pr-preview/${prNumber}/index.html`;
            const body = `${marker}\nüöÄ Pr√©visualisation disponible : [Voir la preview](${previewUrl})`;

            const { data: comments } = await github.rest.issues.listComments({
              owner,
              repo,
              issue_number: prNumber,
              per_page: 100,
            });

            const existing = comments.find(
              (comment) => comment.user.type === 'Bot' && comment.body.includes(marker),
            );

            if (existing) {
              await github.rest.issues.updateComment({
                owner,
                repo,
                comment_id: existing.id,
                body,
              });
            } else {
              await github.rest.issues.createComment({
                owner,
                repo,
                issue_number: prNumber,
                body,
              });
            }
